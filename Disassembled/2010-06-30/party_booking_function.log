R0 := {}
__mapList := R0
R0 := closure(Function #0)
makeMapList := R0
R0 := closure(Function #1)
queryRegionInfo := R0
R0 := closure(Function #2)
queryMapInfo := R0
R0 := closure(Function #3)
getRegionIterator := R0
R0 := closure(Function #4)
getMapIterator := R0
R0 := makeMapList
R0()
R0 := closure(Function #5)
GetPartyBookingHelp := R0
return 


Function #0:
;
Name:            
Defined at line: 2
#Upvalues:       0
#Parameters:     0
Is_vararg:       0
Max Stack Size:  11
;
Locals:
Start PC |  End PC  | Name
00000004 | 00000015 | (for generator)
00000004 | 00000015 | (for state)
00000004 | 00000015 | regionId
00000004 | 00000015 | region
0000000b | 00000013 | (for generator)
0000000b | 00000013 | (for state)
0000000b | 00000013 | mapId
0000000b | 00000013 | map
;
No upvalues

R0 := ipairs
R1 := map_list
R0,R1,R2,R3 := R0(R1)
end
R4 := __mapList
R4[R2] := R3
R3["id"] := R2
R4 := ipairs
R5 := R3["list"]
R4,R5,R6,R7 := R4(R5)
end
R8 := __mapList
R8 := R8[R2]
R8[R6] := R7
R7["id"] := R6
R8 := R3["ignore_recruit_window"]
R7["ignore_recruit_window"] := R8
if R6 ~= nil then PC = 12
 19 [10]: JMP       12
if R2 ~= nil then PC = 5
 21 [11]: JMP       5
return 


Function #1:
;
Name:            
Defined at line: 15
#Upvalues:       0
#Parameters:     1 (R0)
Is_vararg:       0
Max Stack Size:  5
;
Locals:
Start PC |  End PC  | Name
00000000 | 00000011 | regionId
;
No upvalues

R1 := __mapList
R1 := R1[R0]
if R1 != nil then PC := 7
  4 [16]: JMP       7
R1 := R2 := R3 := R4 := nil
return R1,R2,R3,R4
R1 := R0
R2 := __mapList
R2 := R2[R0]
R2 := R2["name"]
R3 := getMapIterator
R4 := R0
R3 := R3(R4)
R4 := __mapList
R4 := R4[R0]
R4 := R4["ignore_recruit_window"]
return R1,R2,R3,R4
return 


Function #2:
;
Name:            
Defined at line: 24
#Upvalues:       0
#Parameters:     2 (R0, R1)
Is_vararg:       0
Max Stack Size:  8
;
Locals:
Start PC |  End PC  | Name
00000000 | 00000020 | regionId
00000000 | 00000020 | mapId
;
No upvalues

R2 := __mapList
R2 := R2[R0]
if R2 != nil then PC := 7
  4 [25]: JMP       7
R2 := R3 := R4 := R5 := R6 := R7 := nil
return R2,R3,R4,R5,R6,R7
R2 := __mapList
R2 := R2[R0]
R2 := R2[R1]
if R2 != nil then PC := 14
 11 [26]: JMP       14
R2 := R3 := R4 := R5 := R6 := R7 := nil
return R2,R3,R4,R5,R6,R7
R2 := R0
R3 := R1
R4 := __mapList
R4 := R4[R0]
R4 := R4[R1]
R4 := R4["name"]
R5 := __mapList
R5 := R5[R0]
R5 := R5[R1]
R5 := R5["colorR"]
R6 := __mapList
R6 := R6[R0]
R6 := R6[R1]
R6 := R6["colorG"]
R7 := __mapList
R7 := R7[R0]
R7 := R7[R1]
R7 := R7["colorB"]
return R2,R3,R4,R5,R6,R7
return 


Function #3:
;
Name:            
Defined at line: 37
#Upvalues:       0
#Parameters:     0
Is_vararg:       0
Max Stack Size:  3
;
Locals:
Start PC |  End PC  | Name
00000001 | 00000009 | pos
;
No upvalues

R0 := 1
R1 := {}
R2 := closure(Function #3.0,R2)
R0 := R0
R1["hasNext"] := R2
R2 := closure(Function #3.1,R2)
R0 := R0
R1["value"] := R2
return R1
return 


Function #3.0:
;
Name:            
Defined at line: 40
#Upvalues:       1
#Parameters:     0
Is_vararg:       0
Max Stack Size:  2
;
No locals information
Upvalues:
;

R0 := __mapList
R1 := U0
R0 := R0[R1]
return R0
return 


Function #3.1:
;
Name:            
Defined at line: 44
#Upvalues:       1
#Parameters:     0
Is_vararg:       0
Max Stack Size:  2
;
No locals information
Upvalues:
;

R0 := U0
temp_pos := R0
R0 := U0
R0 := R0 + 1
U0 := 0
R0 := __mapList
R1 := temp_pos
R0 := R0[R1]
return R0
return 


Function #4:
;
Name:            
Defined at line: 52
#Upvalues:       0
#Parameters:     1 (R0)
Is_vararg:       0
Max Stack Size:  4
;
Locals:
Start PC |  End PC  | Name
00000000 | 0000000b | regionId
00000001 | 0000000b | pos
;
No upvalues

R1 := 1
R2 := {}
R3 := closure(Function #4.0,R3,R4)
R0 := R0
R0 := R1
R2["hasNext"] := R3
R3 := closure(Function #4.1,R3,R4)
R0 := R1
R0 := R0
R2["value"] := R3
return R2
return 


Function #4.0:
;
Name:            
Defined at line: 55
#Upvalues:       2
#Parameters:     0
Is_vararg:       0
Max Stack Size:  2
;
No locals information
Upvalues:
;

R0 := __mapList
R1 := U0
R0 := R0[R1]
if R0 != nil then PC := 8
  5 [56]: JMP       8
R0 := nil
return R0
R0 := __mapList
R1 := U0
R0 := R0[R1]
R1 := U1
R0 := R0[R1]
return R0
return 


Function #4.1:
;
Name:            
Defined at line: 60
#Upvalues:       2
#Parameters:     0
Is_vararg:       0
Max Stack Size:  2
;
No locals information
Upvalues:
;

R0 := U0
temp_pos := R0
R0 := U0
R0 := R0 + 1
U0 := 0
R0 := __mapList
R1 := U1
R0 := R0[R1]
R1 := temp_pos
R0 := R0[R1]
return R0
return 


Function #5:
;
Name:            
Defined at line: 69
#Upvalues:       0
#Parameters:     0
Is_vararg:       0
Max Stack Size:  9
;
Locals:
Start PC |  End PC  | Name
00000001 | 00000011 | descript
00000002 | 00000011 | obj
00000008 | 00000010 | (for generator)
00000008 | 00000010 | (for state)
00000008 | 00000010 | i
00000008 | 00000010 | v
;
No upvalues

R0 := ""
R1 := PartyBookingHelp
if R1 == nil then PC := 17
  4 [73]: JMP       17
R2 := pairs
R3 := R1
R2,R3,R4,R5 := R2(R3)
end
R6 := R0
R7 := R5
R0 := R6 .. R7
R6 := R0
R7 := "\r\n"
R0 := R6 .. R7
if R4 ~= nil then PC = 9
 16 [76]: JMP       9
return R0
return 
